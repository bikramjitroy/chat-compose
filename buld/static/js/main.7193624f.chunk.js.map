{"version":3,"sources":["components/Leftcard.js","components/Propwrap.js","components/Navigation.js","components/Twoinput.js","components/Startinput.js","components/Stopinput.js","components/Userinput.js","components/CanvasDiv.js","App1.js","reportWebVitals.js","index.js"],"names":["json","Leftcard","props","state","activeClass","elemetArray","elemetOrig","filterList","bind","event","evt","this","setState","target","id","nodeType","title","dataTransfer","setData","effectAllowed","src","alt","type","placeholder","onChange","Object","keys","map","e","i","className","onClick","_handleClick","elements","item","iNested","onDragStart","JSON","stringify","draggable","image","label","description","Component","Propwrap","element","updateNodeCb","clicked","rowChip","data","text","theme","language","isEditorReady","updateText1","nextProps","console","log","prevProps","prevState","index","name","value","list","subtype","a","obj","assign","splice","elemetOld","newLabel","_handleClickClose","handlerChange","edgeType","handleChange","comparisonOperator","comparisonValue","x","handleInputChange","length","handleRemoveClick","handleAddClick","Navigation","publishClick","_download","memo","position","style","borderRadius","class","split","join","top","nodeTypes","selectorInput","TwoInput","selectorNodeStart","StartInput","selectorStop","Stopinput","selectorUserInput","Userinput","idedge","getIdEdge","flag","ContentDiv","nodeName","reactFlowInstance","reactFlowWrapper","React","createRef","params","addEdge","animated","arrowHeadType","elementsToRemove","removeElements","_reactFlowInstance","fitView","preventDefault","dropEffect","node","reactFlowBounds","current","getBoundingClientRect","getData","elementCreate","parse","project","clientX","left","y","clientY","newNode","concat","document","createElement","textFile","Blob","toObject","href","URL","createObjectURL","download","body","appendChild","click","old","newEl","el","onSaveAndPublishClick","updateEdgeText","ref","onConnect","onElementsRemove","onLoad","onDrop","onDragOver","deleteKeyCode","snapToGrid","snapGrid","onElementClick","defaultZoom","onNodeDragStop","nodeStrokeColor","n","background","nodeColor","nodeBorderRadius","color","gap","App","CanvasDiv","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7193624f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst json = {\"send\":{'title':'Bot Send','elements':[\n    {'label':'Text','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'eye.svg',\"class\":\"blockyBlue\"},\n    {'label':'Image','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'action.svg',\"class\":\"blockyBlue\"},\n    {'label':'Document','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'time.svg',\"class\":\"blockyBlue\"},\n    {'label':'Audio','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'error.svg',\"class\":\"blockyBlue\"},\n    {'label':'Video','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'error.svg',\"class\":\"blockyBlue\"},\n    {'label':'Location','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'error.svg',\"class\":\"blockyBlue\"},\n    {'label':'Suggestion Cips','description':'Triggers when somebody visits a specified page','type':'selectorInput','subtype':'suggestionchip','image':'error.svg',\"class\":\"blockyBlue\"},\n    {'label':'Carousel Cips','description':'Triggers when somebody visits a specified page','type':'selectorInput','subtype':'carousel','image':'error.svg',\"class\":\"blockyBlue\"},\n    ]},\"receive\":{'title':'Bot Recevies','elements':[\n        {'label':'User Input','description':'Triggers when somebody visits a specified page','type':'selectorUserInput','image':'eye.svg',\"class\":\"blockyGreen\"},\n        {'label':'Attribute','description':'Triggers when somebody visits a specified page','type':'selectorUserInput','image':'action.svg',\"class\":\"blockyGreen\"},\n        ]},\"action\":{'title':'Bot Actions','elements':[\n            {'label':'Start','description':'Start Point','type':'selectorNodeStart','image':'eye.svg',\"class\":\"blockyGrey\"},\n            {'label':'To Agent','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'action.svg',\"class\":\"blockyGrey\"},\n            {'label':'Api Calling','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'action.svg',\"class\":\"blockyGrey\"},\n            {'label':'Coding','description':'Triggers when somebody visits a specified page','type':'selectorInput','image':'action.svg',\"class\":\"blockyGrey\"},\n            {'label':'Close','description':'Triggers when somebody visits a specified page','type':'selectorStop','image':'terminate.svg',\"class\":\"blockyRed\"},\n            ]}};\n    \nexport class Leftcard extends Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            activeClass:'send',\n            elemetArray:json,\n            elemetOrig:json\n        };\n        this.filterList = this.filterList.bind(this);\n    }\n    filterList(event) {\n        // let valueS = event.target.value;\n        // if(valueS){\n        //     console.log('valueS',valueS);\n        //     let tempStor = json;\n        //     // let returned_data = Object.entries(json).filter(([key, value]) => {\n        //     //     let searchRes =  value.elements.filter((user)=>{\n        //     //                 return user.label.toLowerCase().search(valueS) != -1;\n        //     //         });\n        //     //         tempStor[key]['elements']=searchRes;\n        //     //         return tempStor;\n        //     //   })\n        //     Object.entries(tempStor).map(([key, value]) => {\n        //         // console.log(key,value);\n        //         tempStor[key].elements = tempStor[key].elements.filter((user)=>{\n        //                             return user.label.toLowerCase().search(valueS) != -1;\n        //                     });\n        //     })\n        //     // console.log(tempStor);\n        //     // // let result = json.filter((user)=>{\n        //     // //     console.log(user);\n        //     // //         return user.name.toLowerCase().search(value) != -1;\n        //     // // });\n        //     this.setState({elemetArray:tempStor});\n        // }else{\n        //     console.log('valueS',json);\n        //     this.setState({elemetArray:this.state.elemetOrig});\n        // }\n        // let users = this.state.users, result=[];\n        // result = users.filter((user)=>{\n        //     return user.name.toLowerCase().search(value) != -1;\n        // });\n        // this.setState({result});\n    }\n    _handleClick(evt){\n        this.setState({activeClass:evt.target.id})\n    }\n    onDragStart(event, nodeType,title){\n        \n        event.dataTransfer.setData('application/reactflow', nodeType);\n        event.dataTransfer.setData('element', title);\n        event.dataTransfer.effectAllowed = 'move';\n    };\n    render() {\n        \n        return (\n            <div id=\"leftcard\">\n                <div id=\"closecard\">\n                    <img src=\"assets/closeleft.svg\" alt=\"close\"/>\n                </div>\n                <p id=\"header\">Blocks</p>\n                <div id=\"search\">\n                    <img src=\"assets/search.svg\" alt=\"search\"/>\n                    <input type=\"text\" placeholder=\"Search blocks\" onChange={this.filterList}/>\n                </div>\n                <div id=\"subnav\">\n                {Object.keys(this.state.elemetArray).map((e, i) => {\n                   return(<div id={e} key={`menu_`+i} className={this.state.activeClass===e ? 'navactive side' : \"navdisabled side\"} onClick={this._handleClick.bind(this)}>{this.state.elemetArray[e].title}</div> )\n                    \n                })}\n                </div>\n                {Object.keys(this.state.elemetArray).map((e, i) => {\n                return (\n                <div id={`blocklist${++i} ${e}`} key={`menu_compo`+i}  className={this.state.activeClass===e ? 'blocklist' : 'hidden blocklist'}>\n                    {this.state.elemetArray[e].elements.map((item, iNested) => {\n                    return (\n                        <div key={`menu_compo`+i+'_'+iNested} className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, item.type,JSON.stringify(item))}  draggable>\n                            <div className=\"grabme\">\n                                <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                            </div>\n                            <div className=\"blockin\">\n                                <div className=\"blockico\">\n                                    <span></span>\n                                    <img src={`assets/${item.image}`} alt={item.image}/>\n                                </div>\n                                <div className=\"blocktext\">\n                    <p className=\"blocktitle\">{item.label}</p>\n                                    <p className=\"blockdesc\">{item.description}</p>\n                                </div>\n                            </div>\n                        </div>\n                        );\n                    })}\n                </div>\n                );    \n            })}\n                {/* <div id=\"blocklist2 receive\" className={this.state.activeClass==='receive' ? 'blocklist' : 'hidden blocklist'}>\n                    <div className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, 'selectorInput','User Input')}  draggable>\n                        <div className=\"grabme\">\n                            <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                        </div>\n                        <div className=\"blockin\">\n                            <div className=\"blockico\">\n                                <span></span>\n                                <img src=\"assets/eye.svg\" alt=\"eye\"/>\n                            </div>\n                            <div className=\"blocktext\">\n                                <p className=\"blocktitle\">User Input</p>\n                                <p className=\"blockdesc\">Triggers when somebody visits a specified page</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, 'selectorInput','Attribute')}  draggable>\n                        <div className=\"grabme\">\n                            <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                        </div>\n                        <div className=\"blockin\">\n                            <div className=\"blockico\">\n                                <span></span>\n                                <img src=\"assets/eye.svg\" alt=\"eye\"/>\n                            </div>\n                            <div className=\"blocktext\">\n                                <p className=\"blocktitle\">Attribute</p>\n                                <p className=\"blockdesc\">Triggers when somebody visits a specified page</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"blocklist3 action\" className={this.state.activeClass==='action' ? 'blocklist' : 'hidden blocklist'}>\n                    <div className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, 'selectorNodeStart','Start')} draggable>\n                        <div className=\"grabme\">\n                            <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                        </div>\n                        <div className=\"blockin\">\n                            <div className=\"blockico\">\n                                <span></span>\n                                <img src=\"assets/eye.svg\" alt=\"eye\"/>\n                            </div>\n                            <div className=\"blocktext\">\n                                <p className=\"blocktitle\">Start</p>\n                                <p className=\"blockdesc\">Start node</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, 'selectorInput','To Agent')}  draggable>\n                        <div className=\"grabme\">\n                            <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                        </div>\n                        <div className=\"blockin\">\n                            <div className=\"blockico\">\n                                <span></span>\n                                <img src=\"assets/eye.svg\" alt=\"eye\"/>\n                            </div>\n                            <div className=\"blocktext\">\n                                <p className=\"blocktitle\">To Agent</p>\n                                <p className=\"blockdesc\">Triggers when somebody visits a specified page</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, 'selectorInput','Api Calling')}  draggable>\n                        <div className=\"grabme\">\n                            <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                        </div>\n                        <div className=\"blockin\">\n                            <div className=\"blockico\">\n                                <span></span>\n                                <img src=\"assets/eye.svg\" alt=\"eye\"/>\n                            </div>\n                            <div className=\"blocktext\">\n                                <p className=\"blocktitle\">API calling</p>\n                                <p className=\"blockdesc\">Triggers when somebody visits a specified page</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, 'selectorInput','Coding')}  draggable>\n                        <div className=\"grabme\">\n                            <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                        </div>\n                        <div className=\"blockin\">\n                            <div className=\"blockico\">\n                                <span></span>\n                                <img src=\"assets/eye.svg\" alt=\"eye\"/>\n                            </div>\n                            <div className=\"blocktext\">\n                                <p className=\"blocktitle\">Coding</p>\n                                <p className=\"blockdesc\">Triggers when somebody visits a specified page</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"blockelem create-flowy noselect\" onDragStart={(event) => this.onDragStart(event, 'selectorStop','Close')}  draggable>\n                        <div className=\"grabme\">\n                            <img src=\"assets/grabme.svg\" alt=\"grabme\"/>\n                        </div>\n                        <div className=\"blockin\">\n                            <div className=\"blockico\">\n                                <span></span>\n                                <img src=\"assets/eye.svg\" alt=\"eye\"/>\n                            </div>\n                            <div className=\"blocktext\">\n                                <p className=\"blocktitle\">Close</p>\n                                <p className=\"blockdesc\">Close session</p>\n                            </div>\n                        </div>\n                    </div>\n                </div> */}\n            </div>\n            \n        );\n    }\n}\nexport default Leftcard","import React, {Component} from 'react';\nimport Editor from \"@monaco-editor/react\";\nexport class Propwrap extends Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            element:props.element,\n            updateNodeCb:props.updateNodeCb,\n            clicked:'dataprop',\n            rowChip:(props.element&&props.element.data.rowChip)||[{image:\"\",text:\"\",description:\"\"}],\n            theme:\"light\",\n            language:\"javascript\",\n            isEditorReady:false\n        };\n        this.updateText1 = this.updateText1.bind(this);\n    }\n    componentWillReceiveProps(nextProps){\n        if(!this.state.element){\n            this.setState({\n                element:nextProps.element,\n                updateNodeCb:nextProps.updateNodeCb,\n                clicked:'dataprop',\n                rowChip:(nextProps.element&&nextProps.element.data.rowChip)||[{image:\"\",text:\"\",description:\"\"}]\n\n            });\n\n            console.log('nextProps',nextProps);\n        }\n    }\n\n    componentWillUpdate(prevProps, prevState){\n        if(prevProps.element&&this.state.element&&(prevProps.element.id!==this.state.element.id)){\n            this.setState({\n                element:prevProps.element,\n                updateNodeCb:prevProps.updateNodeCb,\n                clicked:'dataprop',\n                rowChip:(prevProps.element&&prevProps.element.data.rowChip)||[{image:\"\",text:\"\",description:\"\"}]\n\n            });\n        }\n        \n        console.log('nextPropswill',prevProps,prevState,this.state);\n    }\n\n    \n    handleInputChange (e, index){\n        const { name, value } = e.target;\n        const list = [...this.state.rowChip];\n        list[index][name] = value;\n        this.setState({rowChip:list});\n        if(this.state.element.data.subtype==='suggestionchip'||this.state.element.data.subtype==='carousel'){\n            let a = {rowChip:list};\n            let obj = Object.assign({}, this.state.element.data, a);\n            this.setState({element:{...this.state.element,data:{...obj}}}); \n        }\n      };\n     \n      // handle click event of the Remove button\n    handleRemoveClick(index){\n        const list = [...this.state.rowChip];\n        list.splice(index, 1);\n        this.setState({rowChip:list});\n      };\n     \n      // handle click event of the Add button\n    handleAddClick() {\n        this.setState({rowChip:[...this.state.rowChip, { image: \"\", text: \"\",description:\"\" }]});\n      };\n\n    _handleClick(evt){\n        this.setState({clicked:evt.target.id})\n    }\n\n    _handleClickClose(evt){\n        console.log('clled');\n        this.setState({clicked:'dataprop',element:null})\n    }\n        \n    handlerChange(evt){\n        \n        if(evt.target.id==='id_label'){\n        this.setState({element:{...this.state.element,label:evt.target.value,data:{...this.state.element.data,label:evt.target.value}}});\n        }else{\n            let a = {};\n            a[evt.target.id]=evt.target.value;\n            \n            var obj = Object.assign({}, this.state.element.data, a);\n            \n            this.setState({element:{...this.state.element,data:{...obj}}}); \n        }\n    }\n    updateText1 (evt) {\n        // this.setState({clicked:true});\n        if(this.state.element){\n            \n           console.log('called');\n            console.log('inside',this.state.element);\n            let elemetOld = this.props.element;\n            let newLabel = this.state.element;\n            // this.setProps({element:this.state.element});\n            \n            this.state.updateNodeCb(elemetOld,newLabel,(elemetOld.data.type==='node'?0:1));\n            \n        }else{\n            console.log('empty',this.props);\n        }\n        this.setState({element:null});\n        \n\n        return true\n    }\n    handleChange(e){\n        let a = {};\n        a[e.target.id]=e.target.value;\n        \n        var obj = Object.assign({}, this.state.element.data, a);\n        console.log(obj);\n        this.setState({element:{...this.state.element,data:{...obj}}}); \n        // this.setState({selectValue:e.target.value});\n    }\n    handleEditorDidMount() {\n        this.setState({isEditorReady:true});\n      }\n\n    render() {\n        if(this.state.element&&this.state.element.data.type === 'edge') {\n            return (\n                <div id=\"propwrap\" className={(this.state.element&&this.state.element.data)?\"itson\":\"\"}>\n                    <div id=\"properties\" className={(this.state.element&&this.state.element.data)?\"expanded\":''}>\n                        <div id=\"close\" onClick={this._handleClickClose.bind(this)}>\n                            <img src=\"assets/close.svg\" alt=\"close\"/>\n                        </div>\n                        <p id=\"header2\">Properties</p>\n                        <div id=\"propswitch\">\n                            <div id=\"dataprop\" className={this.state.clicked==='dataprop' ? 'navactive side' : \"navdisabled side\"} onClick={this._handleClick.bind(this)}>Data</div>\n                            <div id=\"alertprop\" className={this.state.clicked==='alertprop' ? 'navactive side' : \"navdisabled side\"} onClick={this._handleClick.bind(this)}>Alerts</div>\n                            <div id=\"logsprop\" className={this.state.clicked==='logsprop' ? 'navactive side' : \"navdisabled side\"} onClick={this._handleClick.bind(this)}>Logs</div>\n                        </div>\n                        <div className={this.state.clicked==='dataprop' ? 'proplist' : \"proplist hidden\"}>\n                            <p className=\"inputlabel\">Name</p>\n                            <input className=\"dropme\" id='id_label' type=\"text\" value={(this.state.element&&this.state.element.data&&this.state.element.data.label)||''} onChange={this.handlerChange.bind(this)}/>\n                            <p className=\"inputlabel\">Edge Type</p>\n                            <select className=\"dropme\" id=\"edgeType\"\n                                value={(this.state.element&&this.state.element.data&&this.state.element.data.edgeType)||'Valueset'} \n                                onChange={this.handleChange.bind(this)} \n                            >\n                                <option value=\"Valueset\">Valueset</option>\n                                <option value=\"Comparison\">Comparison</option>\n                            </select>\n                            \n                            {(() => {\n                                if ((this.state.element&&this.state.element.data)&&this.state.element.data.edgeType==='Comparison') {\n                                return (\n                                    <>\n                                    <p className=\"inputlabel\">Comparison Type</p>\n                                    <select className=\"dropme\" id=\"comparisonOperator\"\n                                        value={(this.state.element&&this.state.element.data&&this.state.element.data.comparisonOperator)||'=='} \n                                        onChange={this.handleChange.bind(this)} \n                                    >\n                                        <option value=\"<=\">&#60;=</option>\n                                        <option value=\"==\">==</option>\n                                        <option value=\"!=\">!=</option>\n                                        <option value=\"=>\">=></option>\n                                        <option value=\">\">&#62;</option>\n                                        <option value=\"<\">&#60;</option>\n                                    </select>\n                                    <p className=\"inputlabel\">Comparison Value</p>\n                                    <input className=\"dropme\" id='comparisonValue' type=\"text\" value={(this.state.element&&this.state.element.data&&this.state.element.data.comparisonValue)||''} onChange={this.handlerChange.bind(this)}/>\n\n                                    </>\n                                )\n                                } else {\n                                return (\n                                    <></>\n                                )\n                                }\n                            })()}\n                            {/* <p className=\"inputlabel\">Check properties</p>\n                            {JSON.stringify(this.state.element)}\n                            <div className=\"dropme\">All<img src=\"assets/dropdown.svg\" alt=\"all\"/></div>\n                            <div className=\"checkus\"><img src=\"assets/checkon.svg\" alt=\"checkon\"/><p>Log on successful performance</p></div>\n                            <div className=\"checkus\"><img src=\"assets/checkoff.svg\" alt=\"checkoff\"/><p>Give priority to this block</p></div> */}\n                        </div>\n                        <div className={this.state.clicked==='alertprop' ? 'proplist' : \"proplist hidden\"}>\n                            <div className=\"checkus\"><p>Development inprogress</p></div>\n                        </div>\n                        <div className={this.state.clicked==='logsprop' ? 'proplist' : \"proplist hidden\"}>\n                            <div className=\"checkus\"><p>Development inprogress</p></div>\n                        </div>\n                        <div id=\"divisionthing\"></div>\n                        <div id=\"Saveblock\" onClick={this.updateText1.bind(this)}>Save</div>\n                    </div>\n                </div>\n            );\n        }else{\n            return (\n                <div id=\"propwrap\" className={(this.state.element&&this.state.element.data)?\"itson\":\"\"}>\n                    <div id=\"properties\" className={(this.state.element&&this.state.element.data)?\"expanded\":''}>\n                        <div id=\"close\" onClick={this._handleClickClose.bind(this)}>\n                            <img src=\"assets/close.svg\" alt=\"close\"/>\n                        </div>\n                        <p id=\"header2\">Properties</p>\n                        <div id=\"propswitch\">\n                            <div id=\"dataprop\" className={this.state.clicked==='dataprop' ? 'navactive side' : \"navdisabled side\"} onClick={this._handleClick.bind(this)}>Data</div>\n                            <div id=\"alertprop\" className={this.state.clicked==='alertprop' ? 'navactive side' : \"navdisabled side\"} onClick={this._handleClick.bind(this)}>Configuration</div>\n                            <div id=\"logsprop\" className={this.state.clicked==='logsprop' ? 'navactive side' : \"navdisabled side\"} onClick={this._handleClick.bind(this)}>Logs</div>\n                        </div>\n                        <div className={this.state.clicked==='dataprop' ? 'proplist' : \"proplist hidden\"}>\n                            <p className=\"inputlabel\">Name</p>\n                            <input className=\"dropme\" id='id_label' type=\"text\" value={(this.state.element&&this.state.element.data&&this.state.element.data.label)||''} onChange={this.handlerChange.bind(this)}/>\n                            <p className=\"inputlabel\">Description</p>\n                            <textarea className=\"dropmetextarea\" id='description' value={(this.state.element&&this.state.element.data&&this.state.element.data.description)||''} onChange={this.handlerChange.bind(this)}></textarea>\n                            \n                            {/* <p className=\"inputlabel\">Check properties</p>\n                            {JSON.stringify(this.state.element)}\n                            <div className=\"dropme\">All<img src=\"assets/dropdown.svg\" alt=\"all\"/></div>\n                            <div className=\"checkus\"><img src=\"assets/checkon.svg\" alt=\"checkon\"/><p>Log on successful performance</p></div>\n                            <div className=\"checkus\"><img src=\"assets/checkoff.svg\" alt=\"checkoff\"/><p>Give priority to this block</p></div> */}\n                        </div>\n                        <div className={this.state.clicked==='alertprop' ? 'proplist' : \"proplist hidden\"}>\n                            <div className=\"checkus\"><p></p></div>\n                            {(this.state.element&&this.state.element.data)&&(this.state.element.data.subtype==='suggestionchip'||this.state.element.data.subtype==='carousel')&&this.state.rowChip.map((x, i) => {\n                                    return (\n                                    <div key={`card_`+i} className=\"box\">\n                                        {this.state.element&&this.state.element.data&&this.state.element.data.subtype==='carousel'&& \n                                        <span><p className=\"inputlabel\">Image</p><input\n                                        name=\"image\"\n                                        className=\"dropme\"\n                            placeholder=\"Enter Image url\"\n                                        value={x.image}\n                                        onChange={e => this.handleInputChange(e, i)}\n                                    />\n                                    {x.image===''? <div className=\"thumbnail\"></div>:<div className=\"thumbnail\"><img src={x.image} alt=\"\"/></div>}   \n                                    </span> \n                                    \n                                    }\n                                        <p className=\"inputlabel\">Suggestion Text</p>\n                                        <input\n                                        className=\"dropme\"\n                                        name=\"text\"\n                            placeholder=\"Enter Suggestion Text\"\n                                        value={x.text}\n                                        onChange={e => this.handleInputChange(e, i)}\n                                        />\n                                        <p className=\"inputlabel\">Suggestion description</p>\n                                        <input\n                                        className=\"dropme\"\n                                        name=\"description\"\n                            placeholder=\"Enter Suggestion description\"\n                                        value={x.description}\n                                        onChange={e => this.handleInputChange(e, i)}\n                                        />\n                                        <div className=\"btn-box\">\n                                        {this.state.rowChip.length !== 1 && <button\n                                            className=\"mr10\"\n                                            onClick={() => this.handleRemoveClick(i)}>Remove</button>}\n                                        {this.state.rowChip.length - 1 === i && <button onClick={this.handleAddClick.bind(this)}>Add</button>}\n                                        </div>\n                                    </div>\n                                    );\n                                })}\n                                      {/* <div style={{ marginTop: 20 }}>{JSON.stringify(this.state)}</div> */}\n\n                                \n                        </div>\n                        <div className={this.state.clicked==='logsprop' ? 'proplist' : \"proplist hidden\"}>\n                            <div>\n                            {/* <Editor\n                                height=\"490vh\" // By default, it fully fits with its parent\n                                theme={this.state.theme}\n                                language={this.state.language}\n                                value={'Place code here'}\n                                name=\"editor\"\n                                editorDidMount={this.handleEditorDidMount.bind(this)}\n                                onChange={e => this.handleInputChange(e, 'editor')}\n                                loading={\"Loading...\"}\n                            /> */}\n                            </div>\n                        </div>\n                        <div id=\"divisionthing\"></div>\n                        <div id=\"Saveblock\" onClick={this.updateText1.bind(this)}>Save</div>\n                    </div>\n                </div>\n            );\n        }\n        }\n        \n}\nexport default Propwrap","import React, {Component} from 'react';\nexport class Navigation extends Component {\n  constructor(props) {\n      super(props)\n      this.state ={\n          updateNodeCb:props.publishClick,\n      };\n  }\n  _download (evt) {\n    this.state.updateNodeCb();\n     \n    return true\n}\n \n    render() {\n        \n        return (\n          <div id=\"navigation\">\n            <div id=\"leftside\">\n              <div id=\"details\">\n                <div id=\"back\">\n                  <img src={\"assets/arrow.svg\"} alt=\"revskill10\" />\n                  </div>\n                <div id=\"names\">\n                    <p id=\"title\">Your automation pipeline</p>\n                    <p id=\"subtitle\">Marketing automation</p>\n                </div>\n              </div>            \n            </div>\n            <div id=\"centerswitch\">\n                <div id=\"leftswitch\">Diagram view</div>\n                <div id=\"rightswitch\">Code editor</div>\n            </div>\n            <div id=\"buttonsright\">\n                <div id=\"discard\">Discard</div>\n                <div id=\"publish\" onClick={this._download.bind(this)}>Publish to site</div>\n            </div>\n          </div>\n        );\n    }\n}\nexport default Navigation","import React, { memo } from 'react';\n\nimport { Handle } from 'react-flow-renderer';\n\nexport default memo(({ data }) => {\n  return (\n    <>\n      \n      <div className=\"blockelem noselect block botInput\">\n      <Handle type=\"target\" id=\"a\" position=\"top\" style={{ borderRadius: 0 }} />\n            <div className={data.class||'blockyBlue'}>\n              <div className=\"blockyleft\">\n              <img src={`assets/${data.image.split('.').join('blue.')}`} alt={data.image}/>\n      <p className=\"blockyname\">{data.label}</p>\n              </div>\n            </div>\n            {/* <div className=\"blockyright\">\n                <img src=\"assets/more.svg\" alt=\"1\"/>\n            </div> */}\n            <div className=\"blockydiv\">\n            </div>\n            <div className=\"blockyinfo\">\n              {data.description}\n            </div>\n      <Handle\n        type=\"source\"\n        id=\"b\"\n        position=\"bottom\"\n        style={{ borderRadius: 0 }}\n      />\n      <Handle\n        type=\"target\"\n        id=\"c\"\n        position=\"right\"\n        style={{ top: '50%', borderRadius: 0  }}\n      />\n      <Handle\n        type=\"target\"\n        id=\"d\"\n        position=\"left\"\n        style={{ top: '50%', borderRadius: 0  }}\n      />\n    </div>\n      \n    </>\n  );\n});","import React, { memo } from 'react';\n\nimport { Handle } from 'react-flow-renderer';\n\nexport default memo(({ data }) => {\n  return (\n    <>\n      \n      <div className=\"blockelem noselect block botInput\">\n            <div className={data.class||'blockyBlue'}>\n              <div className=\"blockyleft\">\n              <img src={`assets/${data.image.split('.').join('blue.')}`} alt={data.image}/>\n              <p className=\"blockyname\">{data.label}</p>\n              </div>\n            </div>\n            {/* <div className=\"blockyright\">\n                <img src=\"assets/more.svg\" alt=\"1\"/>\n            </div> */}\n            <div className=\"blockydiv\">\n            </div>\n            <div className=\"blockyinfo\">\n              {data.description}\n            </div>\n      <Handle\n        type=\"source\"\n        position=\"bottom\"\n        id=\"a\"\n        style={{ borderRadius: 0 }}\n      />\n    </div>\n      \n    </>\n  );\n});","import React, { memo } from 'react';\n\nimport { Handle } from 'react-flow-renderer';\n\nexport default memo(({ data }) => {\n  return (\n    <>\n      \n      <div className=\"blockelem noselect block botInput\">\n      <Handle type=\"target\" position=\"top\" style={{ borderRadius: 0 }} />\n            <div className={data.class||'blockyBlue'}>\n              <div className=\"blockyleft\">\n              <img src={`assets/${data.image.split('.').join('blue.')}`} alt={data.image}/>\n      <p className=\"blockyname\">{data.label}</p>\n              </div>\n            </div>\n            {/* <div className=\"blockyright\">\n                <img src=\"assets/more.svg\" alt=\"1\"/>\n            </div> */}\n            <div className=\"blockydiv\">\n            </div>\n            <div className=\"blockyinfo\">\n            {data.description}\n            </div>\n      <Handle\n        type=\"source\"\n        position=\"bottom\"\n        id=\"a\"\n        style={{ borderRadius: 0 }}\n      />\n    </div>\n      \n    </>\n  );\n});","import React, { memo } from 'react';\n\nimport { Handle } from 'react-flow-renderer';\n\nexport default memo(({ data }) => {\n  return (\n    <>\n      \n      <div className=\"blockelem noselect block userInput\">\n      <Handle type=\"target\" id=\"a\" position=\"top\" style={{ borderRadius: 0 }} />\n            <div className={data.class||'blockyGreen'}>\n              <div className=\"blockyleft\">\n              <img src={`assets/${data.image.split('.').join('blue.')}`} alt={data.image}/>\n              <p className=\"blockyname\">{data.label}</p>\n              </div>\n            </div>\n            {/* <div className=\"blockyright\">\n                <img src=\"assets/more.svg\" alt=\"1\"/>\n            </div> */}\n            <div className=\"blockydiv\">\n            </div>\n            <div className=\"blockyinfo\">\n              {data.description}\n            </div>\n            <Handle\n            type=\"source\"\n            id=\"b\"\n            position=\"bottom\"\n            style={{ borderRadius: 0 }}\n          />\n          <Handle\n            type=\"target\"\n            id=\"c\"\n            position=\"right\"\n            style={{ top: '50%', borderRadius: 0  }}\n          />\n          <Handle\n            type=\"target\"\n            id=\"d\"\n            position=\"left\"\n            style={{ top: '50%', borderRadius: 0  }}\n          />\n    </div>\n      \n    </>\n  );\n});","import React, {Component } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  removeElements,\n  Controls,\n  MiniMap,\n  Background,\n} from 'react-flow-renderer';\nimport {Propwrap} from './Propwrap'\nimport {Navigation} from './Navigation'\nimport TwoInput from './Twoinput';\nimport StartInput from './Startinput';\nimport Stopinput from './Stopinput';\nimport Userinput from './Userinput';\nimport data from './userFile.json'; \nconst nodeTypes = {\n  selectorInput: TwoInput,\n  selectorNodeStart: StartInput,\n  selectorStop: Stopinput,\n  selectorUserInput: Userinput\n};\n\n\nlet id = 1;\n  let idedge = 0;\n  const getId = () => `dndnode_${id++}`;\n  const getIdEdge = function(flag=true) { \n    if(flag){\n        return `edge_${++idedge}`\n    }  \n    return `edge_${idedge}`\n    } ;\n  \n  \n    export class ContentDiv extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          nodeName: null,\n          reactFlowInstance:null,\n          state:{element:null},\n          elements:data,\n          reactFlowWrapper:React.createRef()\n\n        };\n      }\n      // componentDidUpdate(prevProps, prevState){\n      // // componentWillReceiveProps = (nextProps) => {\n      //   // if (nextProps.position !== this.props.position) {\n      //   //   // this.moveMap(nextProps.position)\n      //   // }\n      //   console.log(prevState,'newtigger',prevProps);\n      //   this.setState({elements:this.state.elements.map((el) => {\n\n      //       if (this.state.nodeName && el.id === this.state.nodeName.id) {\n      //         // it's important that you create a new object here in order to notify react flow about the change\n      //         el.data = {\n      //           ...el.data,\n      //           label: this.state.nodeName.label,\n      //           type: 'node',\n      //         };\n      //         el.label=this.state.nodeName.label;\n      //       }\n    \n      //       return el;\n      //     })}\n      //   );\n      // }\n      \n    onConnect(params){\n      this.setState({elements:addEdge({ ...params, type: 'smoothstep', animated: false,label: 'Edge label '+getIdEdge(),data:{label: 'Edge label '+getIdEdge(false),type:\"edge\"}, id:'react_edge_'+getIdEdge(false),arrowHeadType: 'arrow' }, this.state.elements)});\n    }\n    onElementsRemove(elementsToRemove){ \n      this.setState({elements:removeElements(elementsToRemove, this.state.elements)});\n    };  \n    onLoad(_reactFlowInstance){\n      this.setState({reactFlowInstance:_reactFlowInstance});\n      _reactFlowInstance.fitView();\n    }\n\n    onDragOver(event){\n      event.preventDefault();\n      event.dataTransfer.dropEffect = 'move';\n      console.log('sdsd');\n    };\n    onNodeDragStop(event,node){\n      console.log('sdsd',node);\n    }\n    \n  \n    onDrop(event){\n      event.preventDefault();\n  // console.log('sasds',this);\n      const reactFlowBounds = this.state.reactFlowWrapper.current.getBoundingClientRect();\n      const type = event.dataTransfer.getData('application/reactflow');\n      const elementCreate = JSON.parse(event.dataTransfer.getData('element'));\n      const position = this.state.reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top,\n      });\n      console.log(elementCreate);\n      const newNode = {\n        id: getId(),\n        type,\n        position,\n        label: `${elementCreate.label}`,\n        \n        data: { label: `${elementCreate.label}`,description: `${elementCreate.description}`,'subtype':`${elementCreate.subtype||''}`,type:\"node\",'image':elementCreate.image,'class':elementCreate.class },\n      };\n      console.log('newNode',newNode,event.dataTransfer);\n  \n      this.setState({elements:this.state.elements.concat(newNode)});\n    };\n    onElementClick(event, element){\n        // console.log(element);\n        this.setState({element:element}); \n    }   \n\n    onSaveAndPublishClick(event){\n      // console.log(this.state.reactFlowInstance.toObject().elements);\n      const element = document.createElement(\"a\");\n      const textFile = new Blob([JSON.stringify(this.state.reactFlowInstance.toObject().elements)], {type: 'application/json'}); //pass data from localStorage API to blob\n      element.href = URL.createObjectURL(textFile);\n      element.download = \"userFile.json\";\n      document.body.appendChild(element); \n      element.click();\n    }  \n\n    updateEdgeText(old,newEl,type){ \n        console.log('old,newEl,type',newEl);\n          // if(type){\n          //   this.setState({elements:updateEdge(old, newEl, this.state.elements)});\n          //   console.log('calling',old, newEl,updateEdge(old, newEl, this.state.elements));\n          // }else{\n            this.setState({nodeName:newEl});\n          // }\n          this.setState({element:null});\n          \n        \n      }\n\n    // componentDidMount() { console.log('called didMount'); }\n    componentWillUpdate(prevProps, prevState) { \n      console.log('debug',this.state.nodeName,prevState.nodeName)\n      if(this.state.nodeName!==prevState.nodeName){\n        this.setState({elements:this.state.elements.map((el) => {\n\n                if (el.id === prevState.nodeName.id) {\n                  el = prevState.nodeName;\n                  // it's important that you create a new object here in order to notify react flow about the change\n                  // el.data = {\n                  //   ...el.data,\n                  //   label: prevState.nodeName.label,\n                  //   type: 'node',\n                  // };\n                  // el.label=prevState.nodeName.label;\n                }\n        \n                return el;\n              })}\n            );\n            console.log('debugRunn',this.state.nodeName,prevState.nodeName)\n      }\n    }\n      \n    render(){  \n        // useEffect(() => {\n        //   this.setState({elements:(els) =>\n        //     els.map((el) => {\n        //       if (el.id === this.state.nodeName.id) {\n        //         // it's important that you create a new object here in order to notify react flow about the change\n        //         el.data = {\n        //           ...el.data,\n        //           label: this.state.nodeName.label,\n        //           type: 'node',\n        //         };\n        //         el.label=this.state.nodeName.label;\n        //       }\n      \n        //       return el;\n        //     })\n        //   });\n        // }, [this.state.nodeName, this.state.elements]);\n\n        return (\n         \n            <ReactFlowProvider>\n               <Navigation publishClick={this.onSaveAndPublishClick.bind(this)}/>\n               <Propwrap element={this.state.element} updateNodeCb={this.updateEdgeText.bind(this)} />\n              <div className=\"sectionLeft dndflow reactflow-wrapper nested\" ref={this.state.reactFlowWrapper}>\n               <ReactFlow \n                elements={this.state.elements}\n                onConnect={this.onConnect.bind(this)}\n                onElementsRemove={this.onElementsRemove.bind(this)}\n                onLoad={this.onLoad.bind(this)}\n                onDrop={this.onDrop.bind(this)}\n                onDragOver={this.onDragOver.bind(this)}\n                deleteKeyCode={46}\n                snapToGrid={true}\n                snapGrid={[30, 30]}\n                onElementClick={this.onElementClick.bind(this)}\n                defaultZoom={1.5}\n                onNodeDragStop={this.onNodeDragStop.bind(this)}\n                nodeTypes={nodeTypes}\n              >\n                  <MiniMap\n              nodeStrokeColor={(n) => {\n                if (n.style?.background) return n.style.background;\n                if (n.type === 'input') return '#0041d0';\n                if (n.type === 'output') return '#ff0072';\n                if (n.type === 'default') return '#1a192b';\n                if (n.type === 'selectorInput') return '#0041d0';\n                if (n.type === 'selectorStop') return '#ff0072';\n                if (n.type === 'selectorNodeStart') return '#1a192b';\n\n                return '#eee';\n              }}\n              nodeColor={(n) => {\n                if (n.style?.background) return n.style.background;\n\n                return '#fff';\n              }}\n              nodeBorderRadius={2}\n            />\n            <Controls />\n            <Background color=\"#aaa\" gap={16} />\n\n          </ReactFlow>\n               </div>\n            </ReactFlowProvider>\n\n        );\n    }\n  }\n  export default ContentDiv","import React from 'react'\n// import {Header} from './components/Header'\n// import Content from './components/Content'\n// import {Left} from './components/Left'\nimport {Leftcard} from './components/Leftcard'\nimport CanvasDiv from './components/CanvasDiv'\n\n\n\nimport './asserts/styles.css';\nimport './asserts/flowy.min.css';\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Leftcard />\n        <CanvasDiv />\n      </div>  \n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}